{"version":3,"sources":["cacluator/Home.js","cacluator/util.js","index.js"],"names":["Home","calculator","useCallback","inputList","targetValue","maxList","depth","length","tempPath","currentMax","checkMax","value","i","list","forEach","p","index","push","total","search","calculateResult","style","width","name","labelCol","span","wrapperCol","onFinish","values","restInput","Object","filter","v","map","k","parseInt","resultList","console","log","JSON","stringify","autoComplete","margin","Item","label","formList","initForm","offset","type","htmlType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA4EeA,EAvEF,WAEX,IAAMC,EAAaC,uBAAY,SAACC,EAAWC,GACzC,OCRG,SAAyBD,EAAUC,GACtC,IAAIC,EAAQ,GACRC,EAAQH,EAAUI,OAClBC,EAAW,GACXC,EAAa,EAcXC,EAAW,WAEb,IADA,IAAIC,EAAQ,EACHC,EAAI,EAAGA,EAAIN,EAAOM,IACH,IAAhBJ,EAASI,KACTD,GAASR,EAAUS,IAG3B,GAAID,GAASP,EAAa,CACtB,IAAIS,EAAO,GACXL,EAASM,SAAQ,SAACC,EAAGC,GAAsB,IAAND,GAAWF,EAAKI,KAAKd,EAAUa,OAChEL,EAAQF,IACRJ,EAAU,CAAC,CAAEa,MAAOP,EAAOE,SAC3BJ,EAAaE,GAEbA,IAAUF,GACVJ,EAAQY,KAAK,CAAEC,MAAOP,EAAOE,WAMzC,OAjCa,SAAPM,EAAQP,GACNA,GAAKN,EACLI,KAGAF,EAASI,GAAK,EACdO,EAAOP,EAAI,GACXJ,EAASI,GAAK,EACdO,EAAOP,EAAI,IAwBnBO,CAAO,GACAd,ED/BAe,CAAgBjB,EAAWC,KACjC,IAiCH,OACE,qBAAKiB,MAAO,CAAEC,MAAO,OAArB,SACE,eAAC,IAAD,CACEC,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,SAxCS,SAACC,GAAY,IAClBxB,EAA8BwB,EAA9BxB,YAAgByB,EADC,YACaD,EADb,iBAEnBzB,EAAY2B,OAAOF,OAAOC,GAAWE,QAAO,SAAAC,GAAC,QAAMA,KAAGC,KAAI,SAAAC,GAAC,OAAIC,SAASD,EAAG,OAE3EE,EAAanC,EAAWE,EAAWC,GAGzCiC,QAAQC,IAAI,iCAAUnC,GACtBkC,QAAQC,IAAI,iCAAUlC,EAAc,UACpCiC,QAAQC,IAAIF,GACZA,EAAWtB,SAAQ,SAAAkB,GACjBK,QAAQC,IAAI,gEAAgBC,KAAKC,UAAUR,EAAEnB,MAAQ,iBAASmB,EAAEd,MAAQ,cA8BtEuB,aAAa,MACbpB,MAAO,CAAEqB,OAAQ,IAVnB,UAYE,cAAC,IAAKC,KAAN,CAAWC,MAAM,2BAAOrB,KAAK,cAA7B,SACE,cAAC,IAAD,MA9BS,WAEf,IADA,IAAMsB,EAAW,GACRjC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3BiC,EAAS5B,KACP,cAAC,IAAK0B,KAAN,CACEC,MAAO,SAAWhC,EAClBW,KAAM,SAAWX,EAFnB,SAIE,cAAC,IAAD,OAIN,OAAOiC,EAoBFC,GACD,cAAC,IAAKH,KAAN,CACEjB,WAAY,CACVqB,OAAQ,EACRtB,KAAM,IAHV,SAME,cAAC,IAAD,CAAQuB,KAAK,UAAUC,SAAS,SAAhC,4B,OE7DVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d7b9f0b3.chunk.js","sourcesContent":["import { useCallback } from 'react';\r\nimport { calculateResult } from './util';\r\nimport { Button, Form, Input } from 'antd';\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const calculator = useCallback((inputList, targetValue) => {\r\n    return calculateResult(inputList, targetValue);\r\n  }, []);\r\n\r\n\r\n  const submit = (values) => {\r\n    const { targetValue, ...restInput } = values;\r\n    const inputList = Object.values(restInput).filter(v => !!v).map(k => parseInt(k, 10));\r\n\r\n    const resultList = calculator(inputList, targetValue);\r\n\r\n\r\n    console.log('发票金额：' + inputList);\r\n    console.log('目标额度：' + targetValue + '元');\r\n    console.log(resultList);\r\n    resultList.forEach(v => {\r\n      console.log('最接近目标值的组合为 ' + JSON.stringify(v.list) + ' ,合计' + v.total + '元');\r\n    });\r\n  };\r\n\r\n  const initForm = () => {\r\n    const formList = [];\r\n    for (let i = 0; i < 20; i += 1) {\r\n      formList.push(\r\n        <Form.Item\r\n          label={'Value_' + i}\r\n          name={'value_' + i}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      );\r\n    }\r\n    return formList;\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '50%' }}>\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        onFinish={submit}\r\n        autoComplete=\"off\"\r\n        style={{ margin: 50 }}\r\n      >\r\n        <Form.Item label=\"目标额度\" name=\"targetValue\">\r\n          <Input />\r\n        </Form.Item>\r\n        {initForm()}\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Home;","export function calculateResult(inputList,targetValue){\r\n    let maxList=[]\r\n    let depth = inputList.length\r\n    let tempPath = [];\r\n    let currentMax = 0;\r\n\r\n    const search=(i)=> { // 表示递归深度\r\n        if (i >= depth) {\r\n            checkMax(); //检查最大值\r\n        }\r\n        else {\r\n            tempPath[i] = 0;\r\n            search(i + 1);\r\n            tempPath[i] = 1;\r\n            search(i + 1);\r\n        }\r\n    }\r\n\r\n    const checkMax = ()=>{\r\n        let value = 0;\r\n        for (let i = 0; i < depth; i++) {\r\n            if (tempPath[i] === 1) {\r\n                value += inputList[i];\r\n            }\r\n        }\r\n        if (value <= targetValue) { // 判断是否达到上限\r\n            let list = []\r\n            tempPath.forEach((p, index) => { if (p === 1) { list.push(inputList[index]) } })\r\n            if (value > currentMax) {\r\n                maxList = [{ total: value, list }]\r\n                currentMax = value\r\n            }\r\n            if (value === currentMax) {\r\n                maxList.push({ total: value, list })\r\n            }\r\n        }\r\n    }\r\n\r\n    search(0);\r\n    return maxList\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from './cacluator/Home';\r\nimport 'antd/dist/antd.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}