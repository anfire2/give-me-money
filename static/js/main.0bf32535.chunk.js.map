{"version":3,"sources":["cacluator/Home.js","cacluator/util.js","index.js"],"names":["Title","Typography","Text","Home","useState","inputListForPrint","setInputListForPrint","targetValueForPrint","setTargetValueForPrint","resultListForPrint","setResultListForPrint","calculator","useCallback","inputList","targetValue","maxList","depth","length","tempPath","currentMax","checkMax","value","i","list","forEach","p","index","push","total","sort","toString","search","calculateResult","style","margin","title","display","name","wrapperCol","span","onFinish","values","restInput","Object","filter","v","map","k","parseFloat","resultList","console","log","JSON","stringify","autoComplete","width","level","Item","formList","initForm","type","htmlType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bf32535.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\r\nimport { calculateResult } from './util';\r\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Home = () => {\r\n\r\n  const [inputListForPrint, setInputListForPrint] = useState([]);\r\n  const [targetValueForPrint, setTargetValueForPrint] = useState(0);\r\n  const [resultListForPrint, setResultListForPrint] = useState([]);\r\n\r\n\r\n  const calculator = useCallback((inputList, targetValue) => {\r\n    return calculateResult(inputList, targetValue);\r\n  }, []);\r\n\r\n  const submit = (values) => {\r\n    const { targetValue, ...restInput } = values;\r\n    const inputList = Object.values(restInput).filter(v => !!v).map(k => parseFloat(k));\r\n\r\n    if (inputList.length) {\r\n      const resultList = calculator(inputList, targetValue);\r\n\r\n      console.log('发票金额：' + inputList);\r\n      console.log('目标额度：' + targetValue + '元');\r\n\r\n      resultList.forEach(v => {\r\n        console.log('最接近目标值的组合为 ' + JSON.stringify(v.list) + ' ,合计' + v.total + '元');\r\n      });\r\n\r\n      setInputListForPrint(inputList);\r\n      setTargetValueForPrint(targetValue);\r\n      setResultListForPrint(resultList);\r\n    }else{\r\n      setInputListForPrint([]);\r\n      setTargetValueForPrint(0);\r\n      setResultListForPrint([]);\r\n    }\r\n  };\r\n\r\n  const initForm = () => {\r\n    const formList = [];\r\n    for (let i = 0; i < 21; i += 1) {\r\n      formList.push(\r\n        <Form.Item\r\n          name={'value_' + i}\r\n          style={{ display: 'inline-block', width: '33%' }}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      );\r\n    }\r\n    return formList;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text\r\n        style={{ margin: 10 }}\r\n      >\r\n        <Tooltip title=\"1206更新：1.修复输入不支持小数的问题，修复重复计算导致输出相同结果的问题，略微增强对输入数字的校验；2.调整输入界面至三列，微调标题样式；3.除控制台外，增加界面右侧输出显示\">\r\n          发票助手-不高于（交通费）V 0.9.丐\r\n        </Tooltip>\r\n      </Text>\r\n      <div style={{ display: 'flex' }}>\r\n        <Form\r\n          name=\"basic\"\r\n          wrapperCol={{\r\n            span: 18,\r\n          }}\r\n          onFinish={submit}\r\n          autoComplete=\"off\"\r\n          style={{ margin: '4%', width: '50%' }}\r\n        >\r\n          <Title level={3}>\r\n            目标额度\r\n          </Title>\r\n          <Form.Item name=\"targetValue\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Title level={4}>\r\n            输入发票金额\r\n          </Title>\r\n          {initForm()}\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        {resultListForPrint?.length ? (\r\n          <div style={{ margin: '4%', width: '50%' }}>\r\n            <Title level={4}>发票金额：{JSON.stringify(inputListForPrint, null, 2)}</Title>\r\n            <br />\r\n            <Title level={4}>目标额度：{targetValueForPrint} 元</Title>\r\n            <br />\r\n            {resultListForPrint.map((v) =>\r\n              (<Title level={4}>最接近目标值的组合为：{JSON.stringify(v.list, null, 2)}，合计 {v.total} 元</Title>)\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Home;","export function calculateResult(inputList, targetValue) {\r\n  let maxList = [];\r\n  let depth = inputList.length;\r\n  let tempPath = [];\r\n  let currentMax = 0;\r\n\r\n  const search = (i) => { // 表示递归深度\r\n    if (i >= depth) {\r\n      checkMax(); //检查最大值\r\n    } else {\r\n      tempPath[i] = 0;\r\n      search(i + 1);\r\n      tempPath[i] = 1;\r\n      search(i + 1);\r\n    }\r\n  };\r\n\r\n  const checkMax = () => {\r\n    let value = 0;\r\n    for (let i = 0; i < depth; i++) {\r\n      if (tempPath[i] === 1) {\r\n        value += inputList[i];\r\n      }\r\n    }\r\n    if (value <= targetValue) { // 判断是否达到上限\r\n      let list = [];\r\n      tempPath.forEach((p, index) => {\r\n        if (p === 1) {\r\n          list.push(inputList[index]);\r\n        }\r\n      });\r\n      if (value > currentMax) {\r\n        maxList = [{ total: value, list }];\r\n        currentMax = value;\r\n      }\r\n      if (value === currentMax && list.sort().toString() !== maxList[0]?.list.sort().toString()) {\r\n        maxList.push({ total: value, list });\r\n      }\r\n    }\r\n  };\r\n\r\n  search(0);\r\n  return maxList;\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from './cacluator/Home';\r\nimport 'antd/dist/antd.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}